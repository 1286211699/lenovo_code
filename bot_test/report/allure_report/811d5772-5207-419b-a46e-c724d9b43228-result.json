{"name": "test_start[autotest6]", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidURL: Failed to parse: http://10.110.152.175:9099http://localhost:9097/ext_service/query", "trace": "self = <PreparedRequest [POST]>\nurl = 'http://10.110.152.175:9099http://localhost:9097/ext_service/query'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/requests/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n>           scheme, auth, host, port, path, query, fragment = parse_url(url)\n\nE:\\Python37\\lib\\site-packages\\requests\\models.py:379: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nurl = 'http://10.110.152.175:9099http://localhost:9097/ext_service/query'\n\n    def parse_url(url):\n        \"\"\"\n        Given a url, return a parsed :class:`.Url` namedtuple. Best-effort is\n        performed to parse incomplete urls. Fields not provided will be None.\n        This parser is RFC 3986 compliant.\n    \n        The parser logic and helper functions are based heavily on\n        work done in the ``rfc3986`` module.\n    \n        :param str url: URL to parse into a :class:`.Url` namedtuple.\n    \n        Partly backwards-compatible with :mod:`urlparse`.\n    \n        Example::\n    \n            >>> parse_url('http://google.com/mail/')\n            Url(scheme='http', host='google.com', port=None, path='/mail/', ...)\n            >>> parse_url('google.com:80')\n            Url(scheme=None, host='google.com', port=80, path=None, ...)\n            >>> parse_url('/foo?bar')\n            Url(scheme=None, host=None, port=None, path='/foo', query='bar', ...)\n        \"\"\"\n        if not url:\n            # Empty\n            return Url()\n    \n        source_url = url\n        if not SCHEME_RE.search(url):\n            url = \"//\" + url\n    \n        try:\n            scheme, authority, path, query, fragment = URI_RE.match(url).groups()\n            normalize_uri = scheme is None or scheme.lower() in NORMALIZABLE_SCHEMES\n    \n            if scheme:\n                scheme = scheme.lower()\n    \n            if authority:\n                auth, host, port = SUBAUTHORITY_RE.match(authority).groups()\n                if auth and normalize_uri:\n                    auth = _encode_invalid_chars(auth, USERINFO_CHARS)\n                if port == \"\":\n                    port = None\n            else:\n                auth, host, port = None, None, None\n    \n            if port is not None:\n                port = int(port)\n                if not (0 <= port <= 65535):\n                    raise LocationParseError(url)\n    \n            host = _normalize_host(host, scheme)\n    \n            if normalize_uri and path:\n                path = _remove_path_dot_segments(path)\n                path = _encode_invalid_chars(path, PATH_CHARS)\n            if normalize_uri and query:\n                query = _encode_invalid_chars(query, QUERY_CHARS)\n            if normalize_uri and fragment:\n                fragment = _encode_invalid_chars(fragment, FRAGMENT_CHARS)\n    \n        except (ValueError, AttributeError):\n>           return six.raise_from(LocationParseError(source_url), None)\n\nE:\\Python37\\lib\\site-packages\\urllib3\\util\\url.py:392: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = None, from_value = None\n\n>   ???\nE   urllib3.exceptions.LocationParseError: Failed to parse: http://10.110.152.175:9099http://localhost:9097/ext_service/query\n\n<string>:3: LocationParseError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_01.Testdata object at 0x04A52250>\nautotest = {'Actual': '', 'Auth': '', 'Automated': 'Yes', 'CASE_NO_ID': 'test_api_007', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x04A255F0>\n\n    def test_start(self,autotest,write_book):\n    \n        if autotest.get('row', None):\n            response  = RequestHandle(autotest).get_response()\n            actual_result = response.json()\n            row = autotest['row']\n            result = 'Pass'\n            try:\n                assert assert_handle(actual_result,autotest['Expect'],autotest['Validate_Type'])\n            except Exception as e:\n                result = 'Fail'\n                raise AssertionError(e)\n            finally:\n                write_book.write_back_result(row,str(actual_result),result)\n        else:\n            act_data = autotest['steps']\n            for autotest in act_data:\n>               response = RequestHandle(autotest).get_response()\n\ntests\\test_01.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\RquestHandle.py:51: in get_response\n    response = requests.request(method, url, headers=headers, data=Payload,cookies = None)\nE:\\Python37\\lib\\site-packages\\requests\\api.py:60: in request\n    return session.request(method=method, url=url, **kwargs)\nE:\\Python37\\lib\\site-packages\\requests\\sessions.py:519: in request\n    prep = self.prepare_request(req)\nE:\\Python37\\lib\\site-packages\\requests\\sessions.py:462: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\nE:\\Python37\\lib\\site-packages\\requests\\models.py:313: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [POST]>\nurl = 'http://10.110.152.175:9099http://localhost:9097/ext_service/query'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/requests/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n>           raise InvalidURL(*e.args)\nE           requests.exceptions.InvalidURL: Failed to parse: http://10.110.152.175:9099http://localhost:9097/ext_service/query\n\nE:\\Python37\\lib\\site-packages\\requests\\models.py:381: InvalidURL"}, "parameters": [{"name": "autotest", "value": "{'project_name': 'api', 'file_name': 'api.xlsx', 'sheet_name': 'Sheet1', 'steps': [{'row': 7, 'botActId': 'test327423', 'CASE_NO_ID': 'test_api_007', 'Description': 'snmp查询', 'Priority': 'P1', 'Component': 'KGMS', 'Automated': 'Yes', 'Steps': 'Step1', 'Headers': '{\"Content-Type\": \"application/json\"}', 'Method': 'POST', 'Auth': '', 'Payload': '{\\n    \"serviceType\": \"snpm\",\\n    \"businessType\": \"querySiteInfo\",\\n    \"params\": {\\n        \"longitude\": \"26.809463\",\\n        \"latitude\": \"84.505442\",\\n        \"count\": 10\\n    },\\n    \"timestamp\": 1575510765,\\n    \"requestId\": \"4cdbc040-657a-4847-b266-7e31d9e2c3d9\"\\n}', 'URL': 'http://localhost:9097/ext_service/query', 'Validate_Type': 'json', 'Expect': '{\"status\":200,\"info\":\"success\",\"requestId\":\"4cdbc040-657a-4847-b266-7e31d9e2c3d9\",\"data\":[{\"searchableAddress\":\"1ST FLOOR NEAR MICROMAX CARE BUDHARAJA SAMBALPUR\",\"address\":\"1ST FLOOR NEAR MICROMAX CARE BUDHARAJA SAMBALPUR\",\"lng\":\"21.4794\",\"distance\":\"83.4\",\"name\":\"MAA SAMLESWARI MOBILE CARE\",\"description\":\"\",\"phoneNumber\":[\"9776323411\",\"7008915361\"],\"id\":\"4209975803709450556\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"83.9794\"},{\"searchableAddress\":\"Near DC. Office Opp: Sani Mandir, Bongaigaon , Pin:  783380\",\"address\":\"Near DC. Office Opp: Sani Mandir, Bongaigaon , Pin:  783380\",\"lng\":\"21.3328\",\"distance\":\"105.0\",\"name\":\"Maa Telecom\",\"description\":\"\",\"phoneNumber\":[\"7002086294\",\"8638111179\"],\"id\":\"936849056046270930\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"85.3147\"},{\"searchableAddress\":\"City Tower Junction Next to Big Bazar Dimapur\",\"address\":\"City Tower Junction Next to Big Bazar Dimapur\",\"lng\":\"22.3125\",\"distance\":\"139.9\",\"name\":\"CellHeart\",\"description\":\"\",\"phoneNumber\":[\"9862631212\",\"9366522812\"],\"id\":\"4727160112998656485\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"83.3418\"},{\"searchableAddress\":\"114, S.C Sen Road, Old Police Line, Purulia,  West Bengal.\",\"address\":\"114, S.C Sen Road, Old Police Line, Purulia,  West Bengal.\",\"lng\":\"23.3321\",\"distance\":\"209.2\",\"name\":\"The Mobile Care\",\"description\":\"\",\"phoneNumber\":[\"9732272270\",\"03252223623\"],\"id\":\"5245106823899758166\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"86.3652\"},{\"searchableAddress\":\"Shop No. 236, 2nd Floor, TDA Market, A.T. Road, Tinsukia, Pin: 786125\",\"address\":\"Shop No. 236, 2nd Floor, TDA Market, A.T. Road, Tinsukia, Pin: 786125\",\"lng\":\"21.3152\",\"distance\":\"251.4\",\"name\":\"M/S Platinum\",\"description\":\"\",\"phoneNumber\":[\"9954215505\",\"9954215505\"],\"id\":\"6986757381600497372\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"82.3341\"},{\"searchableAddress\":\"5C/1, 2nd Floor Ambika Tower Nawab Yusuf Road, Near Sangam Palace Civil Lines, Allahabad.  Pin- 211002\",\"address\":\"5C/1, 2nd Floor Ambika Tower Nawab Yusuf Road, Near Sangam Palace Civil Lines, Allahabad.  Pin- 211002\",\"lng\":\"26.5\",\"distance\":\"360.2\",\"name\":\"VL INFOTECH\",\"description\":\"\",\"phoneNumber\":[\"9161100999\",\"9161100999\"],\"id\":\"6917935232832060252\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"81.27\"},{\"searchableAddress\":\"22 Office Lane, Opp. Of Directorate of Higher Education, Melarmath, Agartala, Tripura-799001\",\"address\":\"22 Office Lane, Opp. Of Directorate of Higher Education, Melarmath, Agartala, Tripura-799001\",\"lng\":\"21.3257\",\"distance\":\"362.7\",\"name\":\"Laxmi Telecom\",\"description\":\"\",\"phoneNumber\":[\"9862773621\",\"8787525296\"],\"id\":\"2166908951257608860\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"81.3148\"},{\"searchableAddress\":\"Police Point , Laitumukhra , Second Floor  Above  Dominos  Pizza, Shillong, Pin- 793003\",\"address\":\"Police Point , Laitumukhra , Second Floor  Above  Dominos  Pizza, Shillong, Pin- 793003\",\"lng\":\"22.1154\",\"distance\":\"687.4\",\"name\":\"Gadget Services\",\"description\":\"\",\"phoneNumber\":[\"7005405290\",\"7085715911\"],\"id\":\"5882502833015889510\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"78.3651\"},{\"searchableAddress\":\"Gar Ali City Market,Near Canara Bank, Jorhat Pin :785001\",\"address\":\"Gar Ali City Market,Near Canara Bank, Jorhat Pin :785001\",\"lng\":\"20.2274\",\"distance\":\"924.7\",\"name\":\"M2M Cellular Hut\",\"description\":\"\",\"phoneNumber\":[\"9859423705\",\"9706072588\"],\"id\":\"122033036280637611\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"76.2587\"},{\"searchableAddress\":\"QDIGI Services Limited , 155, 1st Floor, Aggarwal City Plaza,Rohini Sec 3, Delhi-110085\",\"address\":\"QDIGI Services Limited , 155, 1st Floor, Aggarwal City Plaza,Rohini Sec 3, Delhi-110085\",\"lng\":\"17.861326\",\"distance\":\"2805.9\",\"name\":\"QDIGI Services Limited - Rohini\",\"description\":\"\",\"phoneNumber\":[\"01147037606\",\"01147037606\"],\"id\":\"3952811047096568477\",\"businessHour\":\"Mon to Sat 10:00 AM to 7:00 PM\",\"lat\":\"59.379575\"}]}', 'Actual': ''}], 'botActId': 'test327423'}"}], "start": 1600225339516, "stop": 1600225339519, "uuid": "df267075-1f91-482f-8ba9-a3424cd0e7b0", "historyId": "6b68141e37a9e016cde6c8406bcae9d5", "testCaseId": "68de03e34e38ed87d9781455db5f577a", "fullName": "tests.test_01.Testdata#test_start", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_01"}, {"name": "subSuite", "value": "Testdata"}, {"name": "host", "value": "wx0liucy"}, {"name": "thread", "value": "8596-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_01"}]}