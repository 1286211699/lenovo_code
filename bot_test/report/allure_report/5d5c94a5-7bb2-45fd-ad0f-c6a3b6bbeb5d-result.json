{"name": "test_start[autotest6]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = assert_handle({'code': '200', 'data': [{'botActId': 'test868207', 'categoryName': 'Asking Information', 'description': '', 'id': 121248, ...}], 'msg': 'success'}, '{\\n    \"code\": \"2100\",\\n    \"data\": null,\\n    \"msg\": \"The dialog script ID is existed. Please change to another script ID. \"\\n}', 'json')", "trace": "self = <test_01.Testdata object at 0x050F9A70>\nautotest = {'Actual': '', 'Auth': '', 'Automated': 'Yes', 'CASE_NO_ID': 'test_fact_007', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x04CF8F50>\n\n    def test_start(self,autotest,write_book):\n    \n        if autotest.get('row', None):\n            response  = RequestHandle(autotest).get_response()\n            actual_result = response.json()\n            row = autotest['row']\n            result = 'Pass'\n            try:\n                assert assert_handle(actual_result,autotest['Expect'],autotest['Validate_Type'])\n            except Exception as e:\n                result = 'Fail'\n                raise AssertionError(e)\n            finally:\n                write_book.write_back_result(row,str(actual_result),result)\n        else:\n            act_data = autotest['steps']\n            for autotest in act_data:\n                response = RequestHandle(autotest).get_response()\n                row = autotest['row']\n                result = 'Pass'\n                actual_result = None\n                if response:\n                    actual_result = response.json()\n                    try:\n>                       assert assert_handle(actual_result, autotest['Expect'], autotest['Validate_Type'])\nE                       AssertionError: assert False\nE                        +  where False = assert_handle({'code': '200', 'data': [{'botActId': 'test868207', 'categoryName': 'Asking Information', 'description': '', 'id': 121248, ...}], 'msg': 'success'}, '{\\n    \"code\": \"2100\",\\n    \"data\": null,\\n    \"msg\": \"The dialog script ID is existed. Please change to another script ID. \"\\n}', 'json')\n\ntests\\test_01.py:40: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_01.Testdata object at 0x050F9A70>\nautotest = {'Actual': '', 'Auth': '', 'Automated': 'Yes', 'CASE_NO_ID': 'test_fact_007', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x04CF8F50>\n\n    def test_start(self,autotest,write_book):\n    \n        if autotest.get('row', None):\n            response  = RequestHandle(autotest).get_response()\n            actual_result = response.json()\n            row = autotest['row']\n            result = 'Pass'\n            try:\n                assert assert_handle(actual_result,autotest['Expect'],autotest['Validate_Type'])\n            except Exception as e:\n                result = 'Fail'\n                raise AssertionError(e)\n            finally:\n                write_book.write_back_result(row,str(actual_result),result)\n        else:\n            act_data = autotest['steps']\n            for autotest in act_data:\n                response = RequestHandle(autotest).get_response()\n                row = autotest['row']\n                result = 'Pass'\n                actual_result = None\n                if response:\n                    actual_result = response.json()\n                    try:\n                        assert assert_handle(actual_result, autotest['Expect'], autotest['Validate_Type'])\n                    except Exception as e:\n                        result = 'Fail'\n>                       raise AssertionError(e)\nE                       AssertionError: assert False\nE                        +  where False = assert_handle({'code': '200', 'data': [{'botActId': 'test868207', 'categoryName': 'Asking Information', 'description': '', 'id': 121248, ...}], 'msg': 'success'}, '{\\n    \"code\": \"2100\",\\n    \"data\": null,\\n    \"msg\": \"The dialog script ID is existed. Please change to another script ID. \"\\n}', 'json')\n\ntests\\test_01.py:43: AssertionError"}, "parameters": [{"name": "autotest", "value": "{'project_name': 'scello', 'file_name': 'scello.xlsx', 'sheet_name': 'Sheet1', 'steps': [{'row': 14, 'botActId': 'test868207', 'CASE_NO_ID': 'test_fact_007', 'Description': '增加数据', 'Priority': 'P1', 'Component': 'KGMS', 'Automated': 'Yes', 'Steps': 'Step1', 'Headers': '{\"Content-Type\": \"application/json\"}', 'Method': 'POST', 'Auth': '', 'Payload': '[\\n    {\\n        \"botActId\": \"{botActId}\",\\n        \"categoryName\": \"Asking Information\",\\n        \"usage\": 0,\\n        \"scriptExample\": \"{\\\\\"question\\\\\":\\\\\"how are you?\\\\\",\\\\\"answer\\\\\":\\\\\" I am fine\\\\\",\\\\\"imgUrl\\\\\":[]}\",\\n        \"description\": \"\",\\n        \"scriptType\": 1,\\n        \"scriptValue\": \"test\",\\n        \"scriptFeature\": {\\n            \"language\": [\\n                \"English\"\\n            ]\\n        }\\n    }\\n]', 'URL': '/editor/script/save/lena_de', 'Validate_Type': 'status_code', 'Expect': 200.0, 'Actual': ''}, {'row': 15, 'botActId': 'test868207', 'CASE_NO_ID': 'test_fact_007', 'Description': '查询数据', 'Priority': 'P1', 'Component': 'KGMS', 'Automated': 'Yes', 'Steps': 'Step2', 'Headers': '{\"Content-Type\": \"application/json\"}', 'Method': 'GET', 'Auth': '', 'Payload': '', 'URL': '/editor/script/botActId/{botActId}/lena_de', 'Validate_Type': 'json', 'Expect': '{\\n    \"code\": \"2100\",\\n    \"data\": null,\\n    \"msg\": \"The dialog script ID is existed. Please change to another script ID. \"\\n}', 'Actual': ''}], 'botActId': 'test868207'}"}], "start": 1600227033705, "stop": 1600227033786, "uuid": "fe86b6cf-3d9f-42f8-bc6f-4a2dda8cb7e0", "historyId": "6b68141e37a9e016cde6c8406bcae9d5", "testCaseId": "68de03e34e38ed87d9781455db5f577a", "fullName": "tests.test_01.Testdata#test_start", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_01"}, {"name": "subSuite", "value": "Testdata"}, {"name": "host", "value": "wx0liucy"}, {"name": "thread", "value": "18224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_01"}]}