{"name": "test_start[autotest9]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = assert_handle({'data': None, 'duration': 0, 'msg': 'parameter content : comment为空', 'status': 400}, 200.0, 'status_code')", "trace": "self = <test_api.Testdata object at 0x05162A10>\nautotest = {'botActId': 'test049298', 'file_name': 'pranbo.xlsx', 'project_name': 'pranbo', 'sheet_name': 'Sheet1', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x05119130>\nenv_data = ('10.110.152.171', '30081')\n\n    def test_start(self,autotest,write_book,env_data):\n    \n        act_data = autotest['steps']\n        global global_data\n        for data in act_data:\n            row = data['row']\n            result = 'Pass'\n            actual_result = None\n            try:\n                response = RequestHandle(data,env_data,global_data,autotest['project_name']).get_response()\n                actual_result = response.json()\n                if jsonpath.jsonpath(actual_result,'$..botId'):\n                    global_data = jsonpath.jsonpath(actual_result,'$..botId')[0]\n>               assert assert_handle(actual_result, data['Expect'], data['Validate_Type'])\nE               AssertionError: assert False\nE                +  where False = assert_handle({'data': None, 'duration': 0, 'msg': 'parameter content : comment为空', 'status': 400}, 200.0, 'status_code')\n\ntests\\test_api.py:31: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_api.Testdata object at 0x05162A10>\nautotest = {'botActId': 'test049298', 'file_name': 'pranbo.xlsx', 'project_name': 'pranbo', 'sheet_name': 'Sheet1', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x05119130>\nenv_data = ('10.110.152.171', '30081')\n\n    def test_start(self,autotest,write_book,env_data):\n    \n        act_data = autotest['steps']\n        global global_data\n        for data in act_data:\n            row = data['row']\n            result = 'Pass'\n            actual_result = None\n            try:\n                response = RequestHandle(data,env_data,global_data,autotest['project_name']).get_response()\n                actual_result = response.json()\n                if jsonpath.jsonpath(actual_result,'$..botId'):\n                    global_data = jsonpath.jsonpath(actual_result,'$..botId')[0]\n                assert assert_handle(actual_result, data['Expect'], data['Validate_Type'])\n            except Exception as e:\n                result = 'Fail'\n>               raise AssertionError(e)\nE               AssertionError: assert False\nE                +  where False = assert_handle({'data': None, 'duration': 0, 'msg': 'parameter content : comment为空', 'status': 400}, 200.0, 'status_code')\n\ntests\\test_api.py:34: AssertionError"}, "parameters": [{"name": "autotest", "value": "{'project_name': 'pranbo', 'file_name': 'pranbo.xlsx', 'sheet_name': 'Sheet1', 'steps': [{'row': 16, 'botActId': 'test049298', 'CASE_NO_ID': 'test_fact_003', 'Description': '更新conmment失败', 'Priority': 'P1', 'Component': 'DM', 'Automated': 'Yes', 'Steps': 'Step1', 'Headers': '{\\n  \\'Content-Type\\': \\'application/json;charset=UTF-8\\',\\n  \\'Cookie\\':\"\",\\n}\\n', 'Method': 'POST', 'Auth': '', 'Payload': '{\"commentId\":10178}', 'URL': '/issue/comment/update', 'Validate_Type': 'status_code', 'Expect': 200.0, 'Actual': ''}, {'row': 17, 'botActId': 'test049298', 'CASE_NO_ID': 'test_fact_003', 'Description': '查询comment列表', 'Priority': 'P1', 'Component': 'DM', 'Automated': 'Yes', 'Steps': 'Step2', 'Headers': '{\\n  \\'Content-Type\\': \\'application/json;charset=UTF-8\\',\\n  \\'Cookie\\':\"\",\\n}\\n', 'Method': 'POST', 'Auth': '', 'Payload': '{\"issueId\":14347}', 'URL': '/issue/comment/list', 'Validate_Type': 'status_code', 'Expect': 200.0, 'Actual': ''}], 'botActId': 'test049298'}"}], "start": 1607398181077, "stop": 1607398181383, "uuid": "3e5cef46-5b0e-484c-80b3-4bb68cd9fe7e", "historyId": "57b436b2097a9b615b23d2dfac9b10cf", "testCaseId": "fbabcc0c9c11e4ecfbc092daf7d5aadf", "fullName": "tests.test_api.Testdata#test_start", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "Testdata"}, {"name": "host", "value": "wx0liucy"}, {"name": "thread", "value": "9704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}