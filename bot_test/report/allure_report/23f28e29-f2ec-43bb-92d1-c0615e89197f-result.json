{"name": "test_start[autotest14]", "status": "broken", "statusDetails": {"message": "PermissionError: [Errno 13] Permission denied: 'F:\\\\pythonCode\\\\BotTest\\\\results\\\\pranbo.xls'", "trace": "self = <test_api.Testdata object at 0x05DC0530>\nautotest = {'botActId': 'test109459', 'file_name': 'pranbo.xlsx', 'project_name': 'pranbo', 'sheet_name': 'Sheet1', ...}\nwrite_book = <tools.ExcelHandle.ExcelHandle object at 0x05DB6C10>\nenv_data = ('10.110.152.171', '30081')\n\n    def test_start(self,autotest,write_book,env_data):\n    \n        act_data = autotest['steps']\n        global global_data\n        for data in act_data:\n            row = data['row']\n            result = 'Pass'\n            actual_result = None\n            try:\n                response = RequestHandle(data,env_data,global_data,autotest['project_name']).get_response()\n                actual_result = response.json()\n                if jsonpath.jsonpath(actual_result,'$..botId'):\n                    global_data = jsonpath.jsonpath(actual_result,'$..botId')[0]\n                assert assert_handle(actual_result, data['Expect'], data['Validate_Type'])\n            except Exception as e:\n                result = 'Fail'\n                raise AssertionError(e)\n            finally:\n>               write_book.write_back_result(row, str(actual_result), result)\n\ntests\\test_api.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntools\\ExcelHandle.py:94: in write_back_result\n    self.save()\ntools\\ExcelHandle.py:98: in save\n    self.write_book.save(result_file + self.file_name.replace('.xlsx', '.xls'))\nE:\\Python37\\lib\\site-packages\\openpyxl\\workbook\\workbook.py:392: in save\n    save_workbook(self, filename)\nE:\\Python37\\lib\\site-packages\\openpyxl\\writer\\excel.py:291: in save_workbook\n    archive = ZipFile(filename, 'w', ZIP_DEFLATED, allowZip64=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <zipfile.ZipFile [closed]>\nfile = 'F:\\\\pythonCode\\\\BotTest\\\\results\\\\pranbo.xls', mode = 'w'\ncompression = 8, allowZip64 = True, compresslevel = None\n\n    def __init__(self, file, mode=\"r\", compression=ZIP_STORED, allowZip64=True,\n                 compresslevel=None):\n        \"\"\"Open the ZIP file with mode read 'r', write 'w', exclusive create 'x',\n        or append 'a'.\"\"\"\n        if mode not in ('r', 'w', 'x', 'a'):\n            raise ValueError(\"ZipFile requires mode 'r', 'w', 'x', or 'a'\")\n    \n        _check_compression(compression)\n    \n        self._allowZip64 = allowZip64\n        self._didModify = False\n        self.debug = 0  # Level of printing: 0 through 3\n        self.NameToInfo = {}    # Find file info given name\n        self.filelist = []      # List of ZipInfo instances for archive\n        self.compression = compression  # Method of compression\n        self.compresslevel = compresslevel\n        self.mode = mode\n        self.pwd = None\n        self._comment = b''\n    \n        # Check if we were passed a file-like object\n        if isinstance(file, os.PathLike):\n            file = os.fspath(file)\n        if isinstance(file, str):\n            # No, it's a filename\n            self._filePassed = 0\n            self.filename = file\n            modeDict = {'r' : 'rb', 'w': 'w+b', 'x': 'x+b', 'a' : 'r+b',\n                        'r+b': 'w+b', 'w+b': 'wb', 'x+b': 'xb'}\n            filemode = modeDict[mode]\n            while True:\n                try:\n>                   self.fp = io.open(file, filemode)\nE                   PermissionError: [Errno 13] Permission denied: 'F:\\\\pythonCode\\\\BotTest\\\\results\\\\pranbo.xls'\n\nE:\\Python37\\lib\\zipfile.py:1240: PermissionError"}, "parameters": [{"name": "autotest", "value": "{'project_name': 'pranbo', 'file_name': 'pranbo.xlsx', 'sheet_name': 'Sheet1', 'steps': [{'row': 24, 'botActId': 'test109459', 'CASE_NO_ID': 'test_fact_003', 'Description': '创建运维计划', 'Priority': 'P1', 'Component': 'DM', 'Automated': 'Yes', 'Steps': 'Step1', 'Headers': '{\\n  \\'Content-Type\\': \\'application/json;charset=UTF-8\\',\\n  \\'Cookie\\':\"\",\\n}\\n', 'Method': 'POST', 'Auth': '', 'Payload': '{\"versionId\":73}', 'URL': '/process/create', 'Validate_Type': 'status_code', 'Expect': 200.0, 'Actual': ''}], 'botActId': 'test109459'}"}], "start": 1607398097935, "stop": 1607398098309, "uuid": "5bac6fd2-b00d-4359-96de-1bdd719785ba", "historyId": "29a4d75e21e81653ec2c0a7738860284", "testCaseId": "fbabcc0c9c11e4ecfbc092daf7d5aadf", "fullName": "tests.test_api.Testdata#test_start", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "Testdata"}, {"name": "host", "value": "wx0liucy"}, {"name": "thread", "value": "9224-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}